# This is a basic workflow to help you get started with Actions

name: tag build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:    
    tags:
      - v*
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 4096
          remove-dotnet: 'true'
      - name: Checkout
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v4

      - name: Build Verison
        id: build_version
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
        
      - name: Install dependencies
        run: |          
          sudo apt-get install cmake bison          
          # sudo dd if=/dev/zero of=/swp bs=1M count=8192  && sudo chmod 600 /swp && sudo mkswap /swp  && sudo swapon /swp

          curl https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo
          chmod a+x /usr/local/bin/repo

          # mkdir llvm-toolchain && cd llvm-toolchain
          # repo init -u https://android.googlesource.com/platform/manifest -b llvm-toolchain
          # repo sync -c
          
          # mkdir llvm-toolchain && cd llvm-toolchain
          # repo init
          # cp $GITHUB_WORKSPACE/manifest_8490178.xml .repo/mainifests
          # ls .repo/mainifests
          # repo init -m manifest_8490178.xml
          # repo sync -c
      - name: LLVM Build
        run: |
          sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6
          #python toolchain/llvm_android/build.py -h
          #python toolchain/llvm_android/build.py --help
          #python toolchain/llvm_android/build.py --no-build linux

          mkdir -p out/install/windows-x86/clang-dev
          touch out/install/windows-x86/clang-dev/keep
          tar -zcvf release.tar.gz out/install/windows-x86/clang-dev
      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release.tar.gz
          prerelease: ${{ contains(github.ref, '-') }}