# This is a basic workflow to help you get started with Actions

name: lixiaofeng build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:    
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
      - name: Checkout
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v4

      - name: Build Verison
        id: build_version
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
        
      - name: Install dependencies
        run: |          
          curl https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo
          chmod a+x /usr/local/bin/repo

          mkdir llvm-toolchain && cd llvm-toolchain
          repo init -u https://android.googlesource.com/platform/manifest -b llvm-toolchain
          sudo cp $GITHUB_WORKSPACE/manifest_8490178.xml $GITHUB_WORKSPACE/llvm-toolchain/.repo/manifests/
          repo init -m manifest_8490178.xml

          repo sync -c

          echo "------------"
          echo "Copy Code"
          echo "------------"
          sudo cp -r $GITHUB_WORKSPACE/FunctionCount $GITHUB_WORKSPACE/llvm-toolchain/toolchain/llvm-project/llvm/lib/Transforms
          sudo cp -r $GITHUB_WORKSPACE/Timer $GITHUB_WORKSPACE/llvm-toolchain/toolchain/llvm-project/llvm/lib/Transforms
          sudo rm $GITHUB_WORKSPACE/llvm-toolchain/toolchain/llvm-project/llvm/lib/Transforms/CMakeLists.txt
          sudo cp $GITHUB_WORKSPACE/CMakeLists.txt $GITHUB_WORKSPACE/llvm-toolchain/toolchain/llvm-project/llvm/lib/Transforms/CMakeLists.txt

          ll $GITHUB_WORKSPACE/llvm-toolchain/toolchain/llvm-project/llvm/lib/Transforms
          cat $GITHUB_WORKSPACE/llvm-toolchain/toolchain/llvm-project/llvm/lib/Transforms/CMakeLists.txt
      - name: LLVM Build
        run: |
          sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6
          #python toolchain/llvm_android/build.py -h
          #python toolchain/llvm_android/build.py --help
          python llvm-toolchain/toolchain/llvm_android/build.py --no-build linux
      - name: Packing
        run: |
          sudo rm -rf llvm-toolchain/.repo
          ls -al llvm-toolchain
          echo "------------"
          ls -al llvm-toolchain/out
          tar -zcvf out-install-release.tar.gz ./llvm-toolchain/out/windows-x86-64-install
      - name: Uploading out
        uses: actions/upload-artifact@v2
        with:
          name: out-install-release
          path: ./out-install-release.tar.gz
